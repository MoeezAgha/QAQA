@page "/"

<h1>Hello, world!</h1>

<button @onclick="PushPopUp">Push PopUp</button>
<button @onclick="PopPage">Pop Page</button>
<button @onclick="GoToPopUp">GoTo PopUp (Route)</button>

<button @onclick="GoToPopUpGeneric">GoTo GoToPopUpGeneric (Route)</button>
@code {
    private async Task PushPopUp()
    {
        var shell = Application.Current.MainPage as Shell;
        if (shell != null)
        {
            // Navigation with constructor
            await shell.Navigation.PushAsync(
                new QAQA.Components.Pages.PopUpPage2("Hello from PushAsync!")
            );
        }
    }

    private async Task PopPage()
    {
        if (Application.Current.MainPage is Shell shell)
        {
            var currentPage = shell.CurrentPage;

            if (currentPage?.Navigation != null)
            {
                // Push the new page
                await currentPage.Navigation.PushAsync(new PopUpPage2("From pop"));
            }
            else
            {
                await Application.Current.MainPage.DisplayAlert("Error", "Navigation not available.", "OK");
            }
        }
    }

    // private async Task PopPage()
    // {
    //     if (Application.Current.MainPage is Shell shell)
    //     {
    //         // Get the current visible page
    //         var currentPage = shell.CurrentPage;

    //         if (currentPage?.Navigation?.NavigationStack?.Count > 1)
    //         {
    //             await currentPage.Navigation.PopAsync();
    //         }
    //         else
    //         {
    //             // Optional: Handle case where there's no page to pop
    //             await Application.Current.MainPage.DisplayAlert("Notice", "No page to pop.", "OK");
    //         }
    //     }
    // }
    private async Task GoToPopUpGeneric()
    {
        var popup = new GenericPopUpPage(
     blazorComponentType: typeof(PopUp),
     parameters: new Dictionary<string, object> { { "Message", "Hello from Home!" } }
 );

        await Shell.Current.Navigation.PushAsync(popup);

    }
    private async Task GoToPopUp()
    {
        var shell = Application.Current.MainPage as Shell;
        if (shell != null)
        {
            // Navigation with Shell route + parameter
            var route = $"popup?message={Uri.EscapeDataString("Hello from GoToAsync!")}";
            await shell.GoToAsync(route);
        }
    }
}
